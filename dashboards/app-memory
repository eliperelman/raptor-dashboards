/* global _ */

// accessible variables in this scope
var window, document, ARGS, $, jQuery, moment, kbn;

var handler = function(callback) {

  var templates = ['context', 'memory', 'device', 'branch', 'test', 'metric'];
  var requires = ['base', 'annotations']
    .concat(templates)
    .map(function(r) {
      return 'public/dashboards/src/' + r + '.js';
    });
  var WHERE = templates.map(function(t) {
    return '"@" =~ /$@/'.replace(/@/g, t);
  }).join(' AND ');
  var templateTags = templates
    .map(function(t) {
      var tag = {
        key: t,
        value: '/$' + t + '/'
      };

      if (t !== templates[0]) {
        tag.condition = 'AND';
      }

      return tag;
    });

  require(requires, function(dashboard, annotations, $context, $memory, $device, $branch, $test, getMetric) {

    var $metric = getMetric('memory');

    dashboard.title = "App Measurements";
    dashboard.originalTitle = "App Measurements";
    dashboard.templating.list = [$context, $metric, $memory, $device, $branch, $test];
    dashboard.annotations.list = annotations;
    dashboard.rows.push({
      "collapse": false,
      "editable": true,
      "height": "300",
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "datasource": "raptor",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "leftLogBase": 1,
            "leftMax": null,
            "leftMin": 0,
            "rightLogBase": 1,
            "rightMax": null,
            "rightMin": null,
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "height": "300",
          "id": 1,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "minSpan": 6,
          "nullPointMode": "connected",
          "percentage": false,
          "pointradius": 2,
          "points": true,
          "renderer": "flot",
          "repeat": "context",
          "scopedVars": {},
          "seriesOverrides": [],
          "span": 6,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_metric",
              "fields": [
                {
                  "func": "mean",
                  "name": "value"
                }
              ],
              "groupByTags": [
                "metric"
              ],
              "measurement": "memory",
              "query": 'SELECT mean(value) FROM memory WHERE ' + WHERE + ' AND $timeFilter GROUP BY time($interval), "metric"',
              "rawQuery": true,
              "tags": templateTags
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "$context",
          "tooltip": {
            "shared": true,
            "value_type": "cumulative"
          },
          "type": "graph",
          "x-axis": true,
          "y-axis": true,
          "y_formats": [
            "ms",
            "short"
          ]
        }
      ],
      "title": "Apps"
    });

    callback(dashboard);
  });


};

return handler;